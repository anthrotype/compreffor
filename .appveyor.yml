environment:
  matrix:
    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      TOXENV: "py27-mingw32-wheels"
      TOXPYTHON: "C:\\Python27\\python.exe"

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "32"
      TOXENV: "py34-mingw32-wheels"
      TOXPYTHON: "C:\\Python34\\python.exe"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"
      TOXENV: "py35-wheels"
      TOXPYTHON: "C:\\Python35\\python.exe"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      TOXENV: "py27-mingw32-wheels"
      TOXPYTHON: "C:\\Python27-x64\\python.exe"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "64"
      TOXENV: "py34-mingw32-wheels"
      TOXPYTHON: "C:\\Python34-x64\\python.exe"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      TOXENV: "py35-wheels"
      TOXPYTHON: "C:\\Python35-x64\\python.exe"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }

  # checkout git sub-modules
  - git submodule update --init --recursive

  # prepend newly installed Python to the PATH
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # upgrade pip to avoid out-of-date warnings
  - "pip install --disable-pip-version-check --user --upgrade pip"
  - "pip --version"

  # upgrade setuptools and virtualenv
  - "pip install --upgrade setuptools virtualenv"

  # install tox to run test suite in a virtual environment
  - "pip install -U tox"

build: false

test_script:
  - "tox"

on_failure:
  # print the content of tox *.log files
  - ps: Get-Content .tox\\log\\*.log
  - ps: $envlogdir = ".tox\\" + ${env:TOXENV} + "\\log"; `
        foreach($logfile in Get-ChildItem $envlogdir){ `
            $logpath = $envlogdir + "\\" + $logfile; `
            Get-Content -path $logpath }

artifacts:
  # archive the generated packages in the ci.appveyor.com build report
  - path: .tox\dist\*.whl
  - path: .tox\dist\*.zip
